
name: Deploy to AWS

on:
  push:
    branches: [ "main" ]

jobs:
  LoadManifest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Load YAML and set environment variables
        run: |
          YAML_CONTENT=$(<manifest.yaml)
          # Loop through each key-value pair in the YAML file
          while IFS= read -r line; do
            # Extract key and value from the line
            KEY=$(echo "$line" | awk -F: '{print $1}')
            VALUE=$(echo "$line" | awk -F: '{$1=""; print $0}' | xargs)
            echo "$KEY=$VALUE" >> $GITHUB_ENV
          done <<< "$(echo "$YAML_CONTENT" | sed '/^[[:space:]]*#/d')" # Ignore commented lines
  Test:
    runs-on: ubuntu-latest
    needs: LoadManifest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install pip-tools
          pip install poetry
          pip install pytest
          python -m piptools compile \
            -o requirements.txt \
            pyproject.toml
          pip install -r requirements.txt
      - name: Run Tests
        run: |
          pytest
      
  Build:
    runs-on: ubuntu-latest
    needs: Test
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: 'us-east-1'
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
      - name: Build Using Poetry
        run: |
          poetry build
      - name: Create Artifact Bucket
        run: |
          aws s3api create-bucket --bucket $GITHUB_ENV.BUCKET_NAME --region $GITHUB_ENV.AWS_REGION --create-bucket-configuration LocationConstraint=$GITHUB_ENV.AWS_REGION
      - name: Upload Artifact to S3
        run: |
          aws s3 cp src/ s3://$GITHUB_ENV.BUCKET_NAME --recursive
  Deploy:
    runs-on: ubuntu-latest
    needs: Build
    steps: 
      - name: Deploy CloudFormation Stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: sample-glue-job
          template: aws/cloudformation.yaml
        

